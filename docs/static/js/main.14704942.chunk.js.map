{"version":3,"sources":["components/Navbar/navbarelements.js","components/Navbar/index.js","components/MusicPlayer/index.js","api/proapi.js","api/ultimateapi.js","components/Misc/idleAnnimation.js","pages/pageelements.js","pages/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navbar1","styled","Navbar","NavbarBrand","Brand","Copyright","Nav","Link","toggleFullScreen","doc","window","document","docEl","documentElement","requestFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","call","clearStorages","localStorage","clear","Navi","expand","variant","as","to","Toggle","aria-controls","Collapse","id","className","href","onClick","ReactJkMusicPlayer","React","lazy","MusicPlayer","options","audioLists","JSON","parse","getItem","defaultPlayIndex","theme","bounds","quietUpdate","clearPriorAudioLists","autoPlayInitLoadPlayList","preload","glassBg","remember","remove","defaultPosition","right","bottom","defaultPlayMode","mode","once","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","drag","seeked","showMediaSession","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","showDestroy","extendsContent","defaultVolume","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","spaceBar","responsive","mobileMediaQuery","Suspense","fallback","ProApi","songName","dn","a","axios","get","response","Ultimateapi","props","state","status","songname","artist","thumbnail","songurl","audioListsx","query_name","name","generateList","bind","data","templist","singer","cover","musicSrc","timeStamp","Date","getTime","setItem","stringify","i","length","key","list","this","push","sort","b","setState","Component","IdleAnnimationFN","loadanim","startanimation","stopanimation","idleTimerRef","useRef","ref","timeout","onIdle","onActive","Body","div","Neon","TopBeast","Legendof17","Home","loading","value","song","sload","animation","animswkey","x","getElementsByClassName","handleChange","onSubmit","startanim","stopanim","animswitch","sleep","ms","Promise","resolve","setTimeout","event","target","preventDefault","sloadfn","prevState","outerHTML","search","Form","InputGroup","Prepend","Text","Control","size","type","placeholder","onChange","autoFocus","App","basename","process","path","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.14704942.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Navbar } from 'react-bootstrap';\nimport {Nav} from 'react-bootstrap';\n\nexport const Navbar1 = styled(Navbar)`\n  // background-color: #020001;\n  background: linear-gradient(rgba(0, 0, 0, 0.95),rgba(100, 100, 100, 0.0));\n  min-height: 70px;\n`;\n\nexport const NavbarBrand = styled(Navbar.Brand)`\n  color: white;\n  font-size: 20px;\n  padding-right: 1rem;\n  // font-weight: bold;\n  text-decoration: none;\n  font-family: 'Nerko One';\n\n  &:hover {\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nexport const Copyright = styled(Nav.Link)`\n  color: white;\n  font-weight: 600;\n  &:hover {\n    color: white;\n    text-decoration: none;\n    font-weight: 1000;\n  }\n`;\n\nexport const toggleFullScreen = () => {\n    var doc = window.document;\n    var docEl = doc.documentElement;\n  \n    var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\n    var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\n  \n    if(!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n      requestFullScreen.call(docEl);\n    }\n    else {\n      cancelFullScreen.call(doc);\n    }\n}\n\nexport const clearStorages = () => {\n    localStorage.clear();\n}","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Nav} from 'react-bootstrap';\nimport { Navbar1, NavbarBrand, toggleFullScreen, clearStorages, Copyright } from './navbarelements';\n\nconst Navi = () => {\n    return (\n        <div>\n            <Navbar1 expand=\"md\" variant=\"dark\">\n                <NavbarBrand as={Link} to=\"/\">Youtube Music Pro</NavbarBrand>\n                {/* <NavbarBrand href=\"/\">Youtube Music Pro</NavbarBrand> */}\n                <Navbar1.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar1.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    {/* <Nav.Link as={Link} to=\"Legendof17\">Legendof17</Nav.Link> */}\n                    <Nav.Link href={\"https://github.com/legendof17\"}>Legendof17</Nav.Link>\n                    {/* <Nav.Link as={Link} to=\"github\">GitHub</Nav.Link> */}\n                    <Nav.Link href={\"https://github.com/legendof17/youtube-music-pro\"}>GitHub</Nav.Link>\n                    <Nav.Link onClick={clearStorages}>ClearMemory</Nav.Link>\n                    {/* <Nav.Link onClick={toggleFullScreen}>© JASM 2020</Nav.Link> */}\n                    <Nav.Link as={Link} to=\"/\">Features</Nav.Link>\n                    </Nav>\n                    <Copyright onClick={toggleFullScreen}>© TOP BEAST 2021</Copyright>\n                </Navbar1.Collapse>\n            </Navbar1>\n        </div>\n    )\n}\n\nexport default Navi\n","import React from 'react'\n// import ReactJkMusicPlayer from 'react-jinke-music-player'\n\nconst ReactJkMusicPlayer = React.lazy(() => import('react-jinke-music-player'))\n\nconst MusicPlayer = () => {\n    // var audioListx = Object.keys(data).map((key) => [Number(key), data[key]]);\n    var audioListx = JSON.parse(localStorage.getItem('song-list'))\n    // console.log(audioListx)\n    // const audioList1 = [\n    //     {\n    //         name: data['title'],\n    //         singer: data['artist'],\n    //         cover: data['thumbnail'],\n    //         musicSrc: data['songurl'],\n    //         // support async fetch music src. eg.\n    //         // musicSrc: async () => {\n    //         //   return await fetch('/api')\n    //         // },\n    //     },\n    //     // {\n    //     //     name: 'Despacito',\n    //     //     singer: 'Luis Fonsi',\n    //     //     cover:\n    //     //       'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    //     //     musicSrc:\n    //     //       'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3',\n    //     // },\n    // ]\n    \n    const options = {\n        // audioLists: audioList1,\n        audioLists: audioListx,\n        defaultPlayIndex: 0,\n        theme: 'dark',\n        bounds: 'body',\n        quietUpdate: true,\n        clearPriorAudioLists: false,\n        autoPlayInitLoadPlayList: true,\n        preload: true,\n        glassBg: false,\n        remember: false,\n        remove: true,\n        defaultPosition: {\n            right: 50,\n            bottom: 70,\n        },\n        defaultPlayMode: 'order',\n        mode: 'full',\n        once: false,\n        autoPlay: true,\n        toggleMode: true,\n        showMiniModeCover: true,\n        showMiniProcessBar: false,\n        drag: false,\n        seeked: true,\n        showMediaSession: true,\n        showProgressLoadBar: true,\n        showPlay: true,\n        showReload: true,\n        showDownload: false,\n        showPlayMode: true,\n        showThemeSwitch: false,\n        showLyric: false,\n        showDestroy: false,\n        extendsContent: null,\n        defaultVolume: 1,\n        playModeShowTime: 600,\n        loadAudioErrorPlayNext: true,\n        autoHiddenCover: true,\n        spaceBar: true,\n        responsive: true,\n        mobileMediaQuery: '(max-width: 1024px)'\n    }\n    return (\n        <div>\n            <React.Suspense fallback={<div>Loading...</div>}>\n                <ReactJkMusicPlayer {...options} />\n            </React.Suspense>\n        </div>\n    )\n}\n\nexport default MusicPlayer\n","import axios from 'axios'\n\nexport default async function ProApi(songName,dn) {\n    // const ownedproxy = 'https://ntop-cors.herokuapp.com/'\n    // let response = await axios.get(ownedproxy+'https://youtube-music-pro.herokuapp.com/proapi?name='+songName+'&dn='+dn)\n    const apiurl = 'https://youtube-music-pro.herokuapp.com/proapi?name='\n    let response = await axios.get(apiurl+songName+'&dn='+dn)\n    // console.log(response['data'])\n    return response['data']\n}\n","import React from 'react'\nimport MusicPlayer from '../components/MusicPlayer';\n// import Assetfinder from './assetfinder';\n// import Infoextract from './infoextract';\n// import Nametoid from './nametoid';\nimport ProApi from './proapi';\n// import Songstatusfixer from './songstatusfixer';\n\nexport default class Ultimateapi extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: 0,\n            id: null,\n            songname: null,\n            artist: null,\n            thumbnail: null,\n            songurl: null,\n        }\n        this.audioListsx = []\n        this.query_name = props.name;\n        this.generateList = this.generateList.bind(this);\n    }\n\n    async initrun(name) {\n        // let id = await Nametoid(name)\n        // let data = await Infoextract(id)\n        // will enable these advance functions on upcoming versions\n        // data['url'] = await Songstatusfixer(data['url'],id)\n        // this.setState({status: await Assetfinder(data['url'])})\n        // return data\n    }\n\n    async generateList(data,name) {\n        let templist = {\n            name: data['title'],\n            singer: data['artist'],\n            cover: data['thumbnail'],\n            musicSrc: data['url'],\n            // id: data['id']\n            timeStamp: new Date().getTime(),\n        }\n\n        localStorage.setItem(name,JSON.stringify(templist))\n        \n        for (var i = 0; i < localStorage.length; i++) {\n\n            var key = localStorage.key(i);\n\n            if(key === 'song-list') {continue}\n          \n            var list = localStorage.getItem(key);\n          \n            this.audioListsx.push(JSON.parse(list));\n          \n        }\n        return this.audioListsx;\n    }\n\n    async componentDidMount() {\n        const data = await ProApi(this.query_name+' official song',1)\n        // const data = await this.initrun(this.query_name)\n        // this.setState({\n        //     songname: data['title'],\n        //     artist: data['artist'],\n        //     thumbnail: data['thumbnail'],\n        //     songurl: data['url'],\n        //     id: data['id'],\n        // })\n        this.audioListsx = await this.generateList(data,this.query_name)\n        this.audioListsx.sort( function ( a, b ) { return b.timeStamp - a.timeStamp } )\n        localStorage.setItem('song-list',JSON.stringify(this.audioListsx))\n        this.setState({songname: data['title']})\n        // console.log(this.audioListsx)\n        // console.log(data)\n    }\n\n    render() {\n        return (\n            // <div>\n            //     <h1>Hello</h1>\n            //     <h1>Status: {this.state.status}</h1>\n            //     <h1>ID: {this.state.id}</h1>\n            //     <h1>SongName: {this.state.songname}</h1>\n            //     <h1>Artist: {this.state.artist}</h1>\n            //     <h1>Thumbnail: {this.state.thumbnail}</h1>\n            //     <h1>Songurl: {this.state.songurl}</h1>\n            // </div>\n            <div>\n                {this.state.songname ? (\n                    <MusicPlayer />\n                ) : (\n                    <h1>loading</h1>\n                )}\n            </div>\n        )\n    }\n}","import React, { useRef}from 'react'\nimport IdleTimer from 'react-idle-timer'\n\nexport default function IdleAnnimationFN({loadanim, startanimation, stopanimation}) {\n    const idleTimerRef = useRef(null)\n    const onIdle = () => {startanimation()}\n    const onActive = () => {stopanimation()}\n    return(\n        <div>\n            <IdleTimer ref={idleTimerRef} timeout={10 * 1000} onIdle={onIdle} onActive={onActive}/>\n        </div>\n    )\n}","import styled from 'styled-components';\n\nexport const Body = styled.div`\n    min-height: 90vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n    font-family: 'Nerko One';\n`;\n","import React, { Suspense, Component }from 'react'\nimport { Form, InputGroup } from 'react-bootstrap'\nimport Ultimateapi from '../api/ultimateapi'\nimport IdleAnnimationFN from '../components/Misc/idleAnnimation'\n// import Neon from '../components/Home/NeonIntro'\nimport { Body } from './pageelements'\n\nconst Neon = React.lazy(() => import('../components/Home/NeonIntro'))\n\nconst TopBeast = React.lazy(() => import('../components/Home/NeonIntro/topbeast'))\n\nconst Legendof17 = React.lazy(() => import('../components/Home/NeonIntro/legendof17'))\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            value: '',\n            song: false,\n            sload: false,\n            animation: false,\n            animswkey: -1\n        }\n\n        this.songName = this.state.song\n        this.x = document.getElementsByClassName(\"play-btn\")\n        \n\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.startanim = this.startanim.bind(this);\n        this.stopanim = this.stopanim.bind(this);\n        this.animswitch = this.animswitch.bind(this);\n    }\n\n    async componentDidMount() {\n        // await this.sleep(13000)\n        await this.sleep(5000)\n        this.setState({loading: false})\n    }\n\n    sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    handleChange(event) {\n        // console.log(event.target.value)\n        this.setState({value: event.target.value});\n    }\n\n    async onSubmit(event) {\n        event.preventDefault();\n        this.songName = this.state.value\n        this.setState({song: true})\n        this.setState({sload: false})\n        await this.sleep(1000)\n        this.setState({song: false})\n        this.sloadfn(event)\n    }\n\n    async sloadfn() {\n        this.setState({song: true})\n        this.setState({value: ''})\n        this.setState({sload: true})\n    }\n\n    async startanim(event) {\n        await this.setState(prevState => ({ animswkey: prevState.animswkey + 1}))\n        if (this.state.animswkey === 4) {\n            this.setState({animswkey: 1})\n        }\n        this.setState({animation: true})\n    }\n\n    stopanim(event) {\n        this.setState({animation: false})\n    }\n\n    animswitch(event) {\n        // console.log(this.state.animswkey)\n        switch (this.state.animswkey) {\n            case 1:\n                return <Neon />\n            \n            case 2:\n                return <TopBeast />\n\n            case 3:\n                return <Legendof17 />\n\n            default:\n                return <Neon />\n        }\n    }\n \n    render() {\n        return (\n            <Body className='index-body'>\n                <IdleAnnimationFN loadanim={this.state.loading} startanimation={this.startanim} stopanimation={this.stopanim} />\n                {this.state.loading ? (\n                    // <Intro />\n                    // <Neon />\n                    <Suspense fallback={<div>Loading...</div>}>\n                        <Neon />\n                    </Suspense>\n                ) : (\n                this.state.song ? (\n                    <div>\n                        {this.state.sload ? (\n                            this.state.animation && (this.x[0].outerHTML.search('Click to pause') !== -1) ? (\n                                <Suspense fallback={<div>Loading...</div>}>\n                                    {this.animswitch(this.state.animswkey)}\n                                </Suspense>\n                            ) : (\n                                <Form onSubmit={this.onSubmit}>\n                                    <InputGroup>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text id=\"basic-addon1\">♫</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.Control size=\"lg\" type=\"text\" placeholder=\"Enter Song Name\" value={this.state.value} onChange={this.handleChange} />\n                                    </InputGroup>\n                                </Form>\n                        )) : (null)}\n                        <Ultimateapi name={this.songName} />\n                    </div>\n                ) : (\n                    <Form onSubmit={this.onSubmit}>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"basic-addon1\">♫</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control autoFocus size=\"lg\" type=\"text\" placeholder=\"Enter Song Name\" value={this.state.value} onChange={this.handleChange} />\n                        </InputGroup>\n                    </Form>\n                ))}\n            </Body>\n        )\n    }\n}","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport {default as Navbar} from './components/Navbar';\nimport Home from './pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        {/* <Route path='/Legendof17' exact render={() => (window.location = \"https://github.com/legendof17\")} /> */}\n        {/* <Route path='/github' exact render={() => (window.location = \"https://github.com/legendof17/youtube-music-pro\")} /> */}\n        <Redirect path='*' to='/' />\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-jinke-music-player/assets/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}